{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Swal from \"sweetalert2\";\nexport default {\n  props: [\"Palabra\"],\n  name: \"PalabraEscondida\",\n  data() {\n    return {\n      Secreto: this.Palabra[0],\n      ActualEleccion: null,\n      visibilidad: false,\n      Arreglo: this.Palabra[1],\n      Posicion: [],\n      Intentos: 5\n    };\n  },\n  methods: {\n    revisar(Letra) {\n      //Se verifica si la letra seleccionada se encuentra dentro del arreglo\n      let Temporal = this.Secreto.indexOf(Letra);\n      //variable para verificar que si se encontró una coinicidencia\n      let Estado = false;\n      //Se van guardando\n      while (Temporal != -1) {\n        Estado = true;\n        this.Posicion.push(Temporal);\n        Temporal = this.secreto.indexOf(Letra, Temporal + 1);\n      }\n      //Se cambian los asteriscos por la letra real si hubieron coincidencias\n      if (Estado) {\n        this.Posicion.forEach(Element => {\n          this.Arreglo[Element] = this.Secreto[element];\n        });\n        //Se revisa si ya se ha completado la palabra\n        if (this.arreglo.join(\"\") == this.secreto.join(\"\")) {\n          Swal.fire({\n            title: \"¡Felicidades!\",\n            text: \"¡Has completado la palabra!\",\n            allowOutsideClick: false\n          });\n          //Se envia el método para apagar todo el teclado\n          this.$emit(\"cancelar\");\n        }\n      } else {\n        this.intentos--;\n        if (this.intentos <= 0) {\n          Swal.fire({\n            title: \"Lo siento\",\n            text: \"¡Has perdido!\",\n            allowOutsideClick: false\n          });\n          //Se muestra la palabra\n          for (let index = 0; index < this.secreto.length; index++) {\n            this.arreglo[index] = this.secreto[index];\n          }\n          //Se envia el método para apagar todo el teclado\n          this.$emit(\"cancelar\");\n        } else {\n          Swal.fire({\n            title: \"Estás equivocado\",\n            text: \"Intentos restantes: \" + this.intentos,\n            toast: true,\n            position: \"top-end\",\n            timer: 2000,\n            closeOnClickOutside: false,\n            showConfirmButton: false,\n            closeOnEsc: false\n          });\n        }\n        //Se manda que se ha equivocado al padre\n        this.$emit(\"fallar\");\n      }\n      this.$forceUpdate();\n    }\n  }\n};","map":{"version":3,"mappings":";AAQA;AAEA;EACAA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;QACAC;QACA;QACAC;MACA;MACA;MACA;QACA;UACA;QACA;QACA;QACA;UACAC;YACAC;YACAC;YACAC;UACA;UACA;UACA;QACA;MACA;QACA;QACA;UACAH;YACAC;YACAC;YACAC;UACA;UACA;UACA;YACA;UACA;UACA;UACA;QACA;UACAH;YACAC;YACAC;YACAE;YACAC;YACAC;YACAC;YACAC;YACAC;UACA;QACA;QACA;QACA;MACA;MACA;IACA;EACA;AACA","names":["props","name","data","Secreto","ActualEleccion","visibilidad","Arreglo","Posicion","Intentos","methods","revisar","Estado","Temporal","Swal","title","text","allowOutsideClick","toast","position","timer","closeOnClickOutside","showConfirmButton","closeOnEsc"],"sourceRoot":"src/components","sources":["PalabraEscondida.vue"],"sourcesContent":["<template>\r\n    <div class=\"ContenedorPalabraEscondida\">\r\n        <span v-for=\"Caracter in Arreglo\" :key=\"Caracter.id\" forceUpdate>\r\n            <p>{{ Caracter }}</p></span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n    props: [\"Palabra\"],\r\n    name: \"PalabraEscondida\",\r\n    data() {\r\n        return {\r\n            Secreto: this.Palabra[0],\r\n            ActualEleccion: null,\r\n            visibilidad: false,\r\n            Arreglo: this.Palabra[1],\r\n            Posicion: [],\r\n            Intentos: 5,\r\n        };\r\n    },\r\n    methods: {\r\n        revisar(Letra) {\r\n            //Se verifica si la letra seleccionada se encuentra dentro del arreglo\r\n            let Temporal = this.Secreto.indexOf(Letra);\r\n            //variable para verificar que si se encontró una coinicidencia\r\n            let Estado = false;\r\n            //Se van guardando\r\n            while (Temporal != -1) {\r\n                Estado = true;\r\n                this.Posicion.push(Temporal);\r\n                Temporal = this.secreto.indexOf(Letra, Temporal + 1);\r\n            }\r\n            //Se cambian los asteriscos por la letra real si hubieron coincidencias\r\n            if (Estado) {\r\n                this.Posicion.forEach((Element) => {\r\n                    this.Arreglo[Element] = this.Secreto[element];\r\n                });\r\n                //Se revisa si ya se ha completado la palabra\r\n                if (this.arreglo.join(\"\") == this.secreto.join(\"\")) {\r\n                    Swal.fire({\r\n                        title: \"¡Felicidades!\",\r\n                        text: \"¡Has completado la palabra!\",\r\n                        allowOutsideClick: false,\r\n                    });\r\n                    //Se envia el método para apagar todo el teclado\r\n                    this.$emit(\"cancelar\");\r\n                }\r\n            } else {\r\n                this.intentos--;\r\n                if (this.intentos <= 0) {\r\n                    Swal.fire({\r\n                        title: \"Lo siento\",\r\n                        text: \"¡Has perdido!\",\r\n                        allowOutsideClick: false,\r\n                    });\r\n                    //Se muestra la palabra\r\n                    for (let index = 0; index < this.secreto.length; index++) {\r\n                        this.arreglo[index] = this.secreto[index];\r\n                    }\r\n                    //Se envia el método para apagar todo el teclado\r\n                    this.$emit(\"cancelar\");\r\n                } else {\r\n                    Swal.fire({\r\n                        title: \"Estás equivocado\",\r\n                        text: \"Intentos restantes: \" + this.intentos,\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        timer: 2000,\r\n                        closeOnClickOutside: false,\r\n                        showConfirmButton: false,\r\n                        closeOnEsc: false,\r\n                    });\r\n                }\r\n                //Se manda que se ha equivocado al padre\r\n                this.$emit(\"fallar\");\r\n            }\r\n            this.$forceUpdate();\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ContenedorPalabraEscondida {\r\n    width: 100%;\r\n    margin-top: 340px;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\nspan {\r\n    padding: 0px 10px;\r\n    margin: 20px 5px;\r\n    width: 20px;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-bottom: 2px solid black;\r\n}\r\n\r\np {\r\n    font-size: 20pt;\r\n    margin: 0px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}